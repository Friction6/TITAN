import matplotlib.pyplot as pltimport numpy as npimport urllib.requestimport matplotlib.dates as mdatesimport warningsimport sysdef bytespdate2num(fmt, encoding='utf-8'):    strconverter = mdates.strpdate2num(fmt)    def bytesconverter(b):        s = b.decode(encoding)        return strconverter(s)    return bytesconverterdef plot_stock_price(stock, c='k'):        try:            stock_price_url = 'https://www.quandl.com/api/v3/datatables/WIKI/PRICES.csv?api_key=y2SmA2kHY4FRQy-d3_s4&ticker={}'.format(stock)                source_code = urllib.request.urlopen(stock_price_url).read().decode()            stock_data = []            split_source = source_code.split("\n")            for line in split_source:                split_line = line.split(",")                if len(split_line) == 14:                    if 'date' not in line:                        stock_data.append(','.join(split_line[1:]))            date, openp, _, _, closep, volume, _, _, _, _, _, _, _ = np.loadtxt(stock_data,                                                                  delimiter=",",                                                                  unpack=True,                                                                  converters={0: bytespdate2num('%Y-%m-%d')})            plt.plot_date(date, closep, ms=2, color = c)            plt.plot([],[], label=stock.upper(), lw=6, color = c)        except (IndexError, urllib.error.HTTPError):            return False        return Truedef plot(stocks):    warnings.filterwarnings("ignore")        colors = ['#0000FF', '#FF0000', '#00FF00', '#FFFF00', '#000000', '#FF9900', '#CC00CC', '#669999']    plots = 0    for i, j in enumerate(stocks.split(",")[:8]):        if plot_stock_price(j.strip(), c=colors[i]):            plots += 1                if plots == 0:        plt.plot([], [], label="No Data Found", lw=0, color='k')    plt.xlabel('Date')    plt.ylabel('Price (USD)')    plt.title('Stock Prices')    plt.legend()    plt.show()args = sys.argv[1:]if len(args) > 0:    plot(','.join(args))